name: CI Pipeline

on:
  push:
  pull_request:

jobs:
  validate:
    name: Validate
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Check Python files
        run: |
          echo "Checking Python files..."
          python -m py_compile fastapi_backend/app/main.py
          python -m py_compile fastapi_backend/app/config.py
          echo "Python files are valid!"

      - name: Check package.json
        run: |
          echo "Checking package.json..."
          node -e "JSON.parse(require('fs').readFileSync('nextjs-frontend/package.json', 'utf8'))"
          echo "package.json is valid!"

      - name: Check Docker Compose
        run: |
          echo "Checking Docker Compose..."
          # Create a minimal .env file for CI validation
          echo "# CI Environment Variables" > .env
          echo "OPENAI_API_KEY=ci_test_key" >> .env
          echo "DATABASE_URL=postgresql+asyncpg://postgres:password@db:5432/awesome_docify" >> .env
          echo "NEXT_PUBLIC_API_BASE_URL=http://localhost:8000" >> .env
          echo "API_BASE_URL=http://localhost:8000" >> .env
          echo "QDRANT_PATH=./local-shared-data/qdrant" >> .env
          echo "QDRANT_COLLECTION_NAME=openai_docs" >> .env
          echo "DOCUMENT_LOADER_DIR=./local-shared-data/docs" >> .env
          docker compose config
          echo "Docker Compose is valid!"

  test:
    name: Test
    runs-on: ubuntu-latest
    needs: validate
    steps:
      - uses: actions/checkout@v4

      - name: Setup uv
        uses: astral-sh/setup-uv@v1
        with:
          version: "latest"

      - name: Set up test environment variables
        run: |
          echo "OPENAI_API_KEY=ci_test_key" >> .env
          echo "DATABASE_URL=postgresql+asyncpg://postgres:password@db:5432/awesome_docify" >> .env
          echo "NEXT_PUBLIC_API_BASE_URL=http://localhost:8000" >> .env
          echo "API_BASE_URL=http://localhost:8000" >> .env
          echo "QDRANT_PATH=./local-shared-data/qdrant" >> .env
          echo "QDRANT_COLLECTION_NAME=openai_docs" >> .env
          echo "DOCUMENT_LOADER_DIR=./local-shared-data/docs" >> .env

      - name: Run Backend Tests
        run: |
          echo "Running backend tests..."
          cd fastapi_backend
          uv sync
          uv run pytest tests/ -v
          echo "Tests completed!"

  build:
    name: Build
    runs-on: ubuntu-latest
    needs: validate
    steps:
      - uses: actions/checkout@v4

      - name: Build Docker Images
        run: |
          echo "Building Docker images..."
          # Create a minimal .env file for CI build
          echo "# CI Environment Variables" > .env
          echo "OPENAI_API_KEY=ci_test_key" >> .env
          echo "DATABASE_URL=postgresql+asyncpg://postgres:password@db:5432/awesome_docify" >> .env
          echo "NEXT_PUBLIC_API_BASE_URL=http://localhost:8000" >> .env
          echo "API_BASE_URL=http://localhost:8000" >> .env
          echo "QDRANT_PATH=./local-shared-data/qdrant" >> .env
          echo "QDRANT_COLLECTION_NAME=openai_docs" >> .env
          echo "DOCUMENT_LOADER_DIR=./local-shared-data/docs" >> .env
          docker compose build
          echo "Build successful!"
          echo "App is ready to deploy!"
